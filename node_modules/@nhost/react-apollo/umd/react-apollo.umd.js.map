{"version":3,"file":"react-apollo.umd.js","sources":["../src/hooks.tsx","../../apollo/dist/index.esm.js","../src/provider.tsx"],"sourcesContent":["import {\n  DocumentNode,\n  OperationVariables,\n  QueryHookOptions,\n  SubscriptionHookOptions,\n  TypedDocumentNode,\n  useQuery,\n  useSubscription\n} from '@apollo/client'\nimport { useAuthenticated } from '@nhost/react'\n\nexport function useAuthQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  const isAuthenticated = useAuthenticated()\n  const newOptions = { ...options, skip: options?.skip || !isAuthenticated }\n  return useQuery(query, newOptions)\n}\n\nexport function useAuthSubscription<TData = any, TVariables = OperationVariables>(\n  subscription: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: SubscriptionHookOptions<TData, TVariables>\n) {\n  const isAuthenticated = useAuthenticated()\n  const newOptions: SubscriptionHookOptions<TData, TVariables> = {\n    ...options,\n    skip: options?.skip || !isAuthenticated\n  }\n\n  return useSubscription(subscription, newOptions)\n}\n\n// TODO consider other hooks\n/*\n- useAuthLazyQuery\n- useAuthMutation\n- useRoleQuery\n- useRoleLazyQuery\n- useRoleMutation\n- useRoleSubscription\n*/\n","var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nimport { InMemoryCache, createHttpLink, split, from, ApolloClient } from \"@apollo/client/core\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { GraphQLWsLink } from \"@apollo/client/link/subscriptions\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { createClient } from \"graphql-ws\";\nfunction createRestartableClient(options) {\n  let restartRequested = false;\n  let restart = () => {\n    restartRequested = true;\n  };\n  let _started = false;\n  const started = () => _started;\n  const client = createClient(__spreadProps(__spreadValues({}, options), {\n    on: __spreadProps(__spreadValues({}, options.on), {\n      connected: () => {\n        _started = true;\n      },\n      opened: (originalSocket) => {\n        var _a, _b;\n        const socket = originalSocket;\n        (_b = (_a = options.on) == null ? void 0 : _a.opened) == null ? void 0 : _b.call(_a, socket);\n        restart = () => {\n          if (socket.readyState === WebSocket.OPEN) {\n            socket.close(4205, \"Client Restart\");\n          } else {\n            restartRequested = true;\n          }\n        };\n        if (restartRequested) {\n          restartRequested = false;\n          restart();\n        }\n      }\n    })\n  }));\n  return __spreadProps(__spreadValues({}, client), {\n    restart: () => restart(),\n    started\n  });\n}\nconst isBrowser = typeof window !== \"undefined\";\nconst createApolloClient = ({\n  nhost,\n  graphqlUrl,\n  headers = {},\n  publicRole = \"public\",\n  fetchPolicy,\n  cache = new InMemoryCache(),\n  connectToDevTools = isBrowser && false,\n  onError\n}) => {\n  let backendUrl = graphqlUrl || (nhost == null ? void 0 : nhost.graphql.getUrl());\n  if (!backendUrl) {\n    throw Error(\"Can't initialize the Apollo Client: no backend Url has been provided\");\n  }\n  const interpreter = nhost == null ? void 0 : nhost.auth.client.interpreter;\n  let token = null;\n  const getAuthHeaders = () => {\n    const resHeaders = __spreadProps(__spreadValues({}, headers), {\n      \"Sec-WebSocket-Protocol\": \"graphql-ws\"\n    });\n    if (token) {\n      resHeaders.authorization = `Bearer ${token}`;\n    } else {\n      resHeaders.role = publicRole;\n    }\n    return resHeaders;\n  };\n  const uri = backendUrl;\n  const wsClient = isBrowser && createRestartableClient({\n    url: uri.startsWith(\"https\") ? uri.replace(/^https/, \"wss\") : uri.replace(/^http/, \"ws\"),\n    connectionParams: () => ({\n      headers: __spreadValues(__spreadValues({}, headers), getAuthHeaders())\n    })\n  });\n  const wsLink = wsClient && new GraphQLWsLink(wsClient);\n  const httpLink = setContext((_, { headers: headers2 }) => {\n    return {\n      headers: __spreadValues(__spreadValues({}, headers2), getAuthHeaders())\n    };\n  }).concat(createHttpLink({\n    uri\n  }));\n  const link = wsLink ? split(({ query }) => {\n    const mainDefinition = getMainDefinition(query);\n    const { kind } = mainDefinition;\n    let operation;\n    if (\"operation\" in mainDefinition) {\n      operation = mainDefinition.operation;\n    }\n    return kind === \"OperationDefinition\" && operation === \"subscription\";\n  }, wsLink, httpLink) : httpLink;\n  const apolloClientOptions = {\n    cache: cache || new InMemoryCache(),\n    ssrMode: !isBrowser,\n    defaultOptions: {\n      watchQuery: {\n        fetchPolicy\n      }\n    },\n    connectToDevTools\n  };\n  apolloClientOptions.link = typeof onError === \"function\" ? from([onError, link]) : from([link]);\n  const client = new ApolloClient(apolloClientOptions);\n  interpreter == null ? void 0 : interpreter.onTransition(async (state, event) => {\n    if ([\"SIGNOUT\", \"SIGNED_IN\", \"TOKEN_CHANGED\"].includes(event.type)) {\n      const newToken = state.context.accessToken.value;\n      token = newToken;\n      if (event.type === \"SIGNOUT\") {\n        try {\n          await client.resetStore();\n        } catch (error) {\n          console.error(\"Error resetting Apollo client cache\");\n          console.error(error);\n        }\n      } else {\n        if (isBrowser && wsClient && wsClient.started()) {\n          wsClient.restart();\n        }\n      }\n    }\n  });\n  return client;\n};\nexport { createApolloClient };\n//# sourceMappingURL=index.esm.js.map\n","import React, { PropsWithChildren, useEffect, useState } from 'react'\n\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client'\nimport { createApolloClient, NhostApolloClientOptions } from '@nhost/apollo'\n\n// This is needed because ApolloProvider can't be rendered without a client. To be able to render\n// the children without our client, we need an ApolloProvider because of potential underlying\n// useQuery hooks in customer applications. This way ApolloProvider and children can be rendered.\nconst mockApolloClient = new ApolloClient({ cache: new InMemoryCache() })\n\nexport const NhostApolloProvider: React.FC<PropsWithChildren<NhostApolloClientOptions>> = ({\n  children,\n  ...options\n}) => {\n  // * See https://github.com/nhost/nhost/pull/214#pullrequestreview-889730478\n  const [client, setClient] = useState<ReturnType<typeof createApolloClient>>()\n\n  // Note: Because we're using XState under the hood, we need to make sure to start the interpreter\n  // on the client side when the component is mounted. This is why we're using `useState` and\n  // `useEffect`.\n  useEffect(() => {\n    if (!client) {\n      setClient(createApolloClient(options))\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return <ApolloProvider client={client || mockApolloClient}>{children}</ApolloProvider>\n}\n"],"names":["query","options","isAuthenticated","useAuthenticated","newOptions","skip","useQuery","subscription","useSubscription","createClient","InMemoryCache","GraphQLWsLink","setContext","createHttpLink","split","getMainDefinition","from","ApolloClient","mockApolloClient","cache","NhostApolloProvider","children","client","setClient","useState","useEffect","createApolloClient","ApolloProvider"],"mappings":"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"}