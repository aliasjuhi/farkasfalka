"use strict";var I=Object.defineProperty,M=Object.defineProperties;var _=Object.getOwnPropertyDescriptors;var A=Object.getOwnPropertySymbols;var D=Object.prototype.hasOwnProperty,E=Object.prototype.propertyIsEnumerable;var N=(e,t,r)=>t in e?I(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,n=(e,t)=>{for(var r in t||(t={}))D.call(t,r)&&N(e,r,t[r]);if(A)for(var r of A(t))E.call(t,r)&&N(e,r,t[r]);return e},u=(e,t)=>M(e,_(t));Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});var a=require("@apollo/client/core"),G=require("@apollo/client/link/context"),L=require("@apollo/client/link/subscriptions"),U=require("@apollo/client/utilities"),W=require("graphql-ws");function x(e){let t=!1,r=()=>{t=!0},d=!1;const h=()=>d,C=W.createClient(u(n({},e),{on:u(n({},e.on),{connected:()=>{d=!0},opened:b=>{var l,s;const c=b;(s=(l=e.on)==null?void 0:l.opened)==null||s.call(l,c),r=()=>{c.readyState===WebSocket.OPEN?c.close(4205,"Client Restart"):t=!0},t&&(t=!1,r())}})}));return u(n({},C),{restart:()=>r(),started:h})}const w=typeof window!="undefined",H=({nhost:e,graphqlUrl:t,headers:r={},publicRole:d="public",fetchPolicy:h,cache:C=new a.InMemoryCache,connectToDevTools:b=w&&!1,onError:c})=>{let l=t||(e==null?void 0:e.graphql.getUrl());if(!l)throw Error("Can't initialize the Apollo Client: no backend Url has been provided");const s=e==null?void 0:e.auth.client.interpreter;let y=null;const g=()=>{const o=u(n({},r),{"Sec-WebSocket-Protocol":"graphql-ws"});return y?o.authorization=`Bearer ${y}`:o.role=d,o},f=l,p=w&&x({url:f.startsWith("https")?f.replace(/^https/,"wss"):f.replace(/^http/,"ws"),connectionParams:()=>({headers:n(n({},r),g())})}),q=p&&new L.GraphQLWsLink(p),S=G.setContext((o,{headers:i})=>({headers:n(n({},i),g())})).concat(a.createHttpLink({uri:f})),v=q?a.split(({query:o})=>{const i=U.getMainDefinition(o),{kind:T}=i;let k;return"operation"in i&&(k=i.operation),T==="OperationDefinition"&&k==="subscription"},q,S):S,m={cache:C||new a.InMemoryCache,ssrMode:!w,defaultOptions:{watchQuery:{fetchPolicy:h}},connectToDevTools:b};m.link=typeof c=="function"?a.from([c,v]):a.from([v]);const O=new a.ApolloClient(m);return s==null||s.onTransition(async(o,i)=>{if(["SIGNOUT","SIGNED_IN","TOKEN_CHANGED"].includes(i.type))if(y=o.context.accessToken.value,i.type==="SIGNOUT")try{await O.resetStore()}catch(k){console.error("Error resetting Apollo client cache"),console.error(k)}else w&&p&&p.started()&&p.restart()}),O};exports.createApolloClient=H;
//# sourceMappingURL=index.cjs.js.map
