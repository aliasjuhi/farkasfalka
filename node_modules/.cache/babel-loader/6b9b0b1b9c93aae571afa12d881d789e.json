{"ast":null,"code":"import { getAssetPath } from '@stencil/core/internal/client';\nlet CACHED_MAP;\nconst getIconMap = () => {\n  if (typeof window === 'undefined') {\n    return new Map();\n  } else {\n    if (!CACHED_MAP) {\n      const win = window;\n      win.Ionicons = win.Ionicons || {};\n      CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n    }\n    return CACHED_MAP;\n  }\n};\nconst addIcons = icons => {\n  const map = getIconMap();\n  Object.keys(icons).forEach(name => map.set(name, icons[name]));\n};\nconst getUrl = i => {\n  let url = getSrc(i.src);\n  if (url) {\n    return url;\n  }\n  url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n  if (url) {\n    return getNamedUrl(url);\n  }\n  if (i.icon) {\n    url = getSrc(i.icon);\n    if (url) {\n      return url;\n    }\n    url = getSrc(i.icon[i.mode]);\n    if (url) {\n      return url;\n    }\n  }\n  return null;\n};\nconst getNamedUrl = iconName => {\n  const url = getIconMap().get(iconName);\n  if (url) {\n    return url;\n  }\n  return getAssetPath(`svg/${iconName}.svg`);\n};\nconst getName = (iconName, icon, mode, ios, md) => {\n  // default to \"md\" if somehow the mode wasn't set\n  mode = (mode && toLower(mode)) === 'ios' ? 'ios' : 'md';\n  // if an icon was passed in using the ios or md attributes\n  // set the iconName to whatever was passed in\n  if (ios && mode === 'ios') {\n    iconName = toLower(ios);\n  } else if (md && mode === 'md') {\n    iconName = toLower(md);\n  } else {\n    if (!iconName && icon && !isSrc(icon)) {\n      iconName = icon;\n    }\n    if (isStr(iconName)) {\n      iconName = toLower(iconName);\n    }\n  }\n  if (!isStr(iconName) || iconName.trim() === '') {\n    return null;\n  }\n  // only allow alpha characters and dash\n  const invalidChars = iconName.replace(/[a-z]|-|\\d/gi, '');\n  if (invalidChars !== '') {\n    return null;\n  }\n  return iconName;\n};\nconst getSrc = src => {\n  if (isStr(src)) {\n    src = src.trim();\n    if (isSrc(src)) {\n      return src;\n    }\n  }\n  return null;\n};\nconst isSrc = str => str.length > 0 && /(\\/|\\.)/.test(str);\nconst isStr = val => typeof val === 'string';\nconst toLower = val => val.toLowerCase();\n/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nconst inheritAttributes = function (el) {\n  let attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const attributeObject = {};\n  attributes.forEach(attr => {\n    if (el.hasAttribute(attr)) {\n      const value = el.getAttribute(attr);\n      if (value !== null) {\n        attributeObject[attr] = el.getAttribute(attr);\n      }\n      el.removeAttribute(attr);\n    }\n  });\n  return attributeObject;\n};\nexport { addIcons as a, inheritAttributes as b, getName as c, getUrl as g, isStr as i };","map":{"version":3,"names":["getAssetPath","CACHED_MAP","getIconMap","window","Map","win","Ionicons","map","addIcons","icons","Object","keys","forEach","name","set","getUrl","i","url","getSrc","src","getName","icon","mode","ios","md","getNamedUrl","iconName","get","toLower","isSrc","isStr","trim","invalidChars","replace","str","length","test","val","toLowerCase","inheritAttributes","el","attributes","attributeObject","attr","hasAttribute","value","getAttribute","removeAttribute","a","b","c","g"],"sources":["C:/Users/Alias/weboldal/web-login/node_modules/ionicons/components/utils.js"],"sourcesContent":["import { getAssetPath } from '@stencil/core/internal/client';\n\nlet CACHED_MAP;\nconst getIconMap = () => {\n  if (typeof window === 'undefined') {\n    return new Map();\n  }\n  else {\n    if (!CACHED_MAP) {\n      const win = window;\n      win.Ionicons = win.Ionicons || {};\n      CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n    }\n    return CACHED_MAP;\n  }\n};\nconst addIcons = (icons) => {\n  const map = getIconMap();\n  Object.keys(icons).forEach(name => map.set(name, icons[name]));\n};\nconst getUrl = (i) => {\n  let url = getSrc(i.src);\n  if (url) {\n    return url;\n  }\n  url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n  if (url) {\n    return getNamedUrl(url);\n  }\n  if (i.icon) {\n    url = getSrc(i.icon);\n    if (url) {\n      return url;\n    }\n    url = getSrc(i.icon[i.mode]);\n    if (url) {\n      return url;\n    }\n  }\n  return null;\n};\nconst getNamedUrl = (iconName) => {\n  const url = getIconMap().get(iconName);\n  if (url) {\n    return url;\n  }\n  return getAssetPath(`svg/${iconName}.svg`);\n};\nconst getName = (iconName, icon, mode, ios, md) => {\n  // default to \"md\" if somehow the mode wasn't set\n  mode = (mode && toLower(mode)) === 'ios' ? 'ios' : 'md';\n  // if an icon was passed in using the ios or md attributes\n  // set the iconName to whatever was passed in\n  if (ios && mode === 'ios') {\n    iconName = toLower(ios);\n  }\n  else if (md && mode === 'md') {\n    iconName = toLower(md);\n  }\n  else {\n    if (!iconName && icon && !isSrc(icon)) {\n      iconName = icon;\n    }\n    if (isStr(iconName)) {\n      iconName = toLower(iconName);\n    }\n  }\n  if (!isStr(iconName) || iconName.trim() === '') {\n    return null;\n  }\n  // only allow alpha characters and dash\n  const invalidChars = iconName.replace(/[a-z]|-|\\d/gi, '');\n  if (invalidChars !== '') {\n    return null;\n  }\n  return iconName;\n};\nconst getSrc = (src) => {\n  if (isStr(src)) {\n    src = src.trim();\n    if (isSrc(src)) {\n      return src;\n    }\n  }\n  return null;\n};\nconst isSrc = (str) => str.length > 0 && /(\\/|\\.)/.test(str);\nconst isStr = (val) => typeof val === 'string';\nconst toLower = (val) => val.toLowerCase();\n/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nconst inheritAttributes = (el, attributes = []) => {\n  const attributeObject = {};\n  attributes.forEach(attr => {\n    if (el.hasAttribute(attr)) {\n      const value = el.getAttribute(attr);\n      if (value !== null) {\n        attributeObject[attr] = el.getAttribute(attr);\n      }\n      el.removeAttribute(attr);\n    }\n  });\n  return attributeObject;\n};\n\nexport { addIcons as a, inheritAttributes as b, getName as c, getUrl as g, isStr as i };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}