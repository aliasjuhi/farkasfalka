{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Alias\\\\weboldal\\\\web-login\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Alias\\\\weboldal\\\\web-login\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Alias\\\\weboldal\\\\web-login\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\nimport jwt_decode from \"jwt-decode\";\nimport { interpret } from \"xstate\";\nimport { AuthClient, signUpEmailSecurityKeyPromise, signUpEmailPasswordPromise, encodeQueryParameters, rewriteRedirectTo, signInEmailPasswordPromise, EMAIL_NEEDS_VERIFICATION, signInEmailSecurityKeyPromise, signInEmailPasswordlessPromise, signInSmsPasswordlessOtpPromise, signInSmsPasswordlessPromise, signInMfaTotpPromise, signInAnonymousPromise, signOutPromise, createResetPasswordMachine, resetPasswordPromise, createChangePasswordMachine, changePasswordPromise, createSendVerificationEmailMachine, sendVerificationEmailPromise, createChangeEmailMachine, changeEmailPromise, addSecurityKeyPromise, NO_REFRESH_TOKEN, TOKEN_REFRESHER_RUNNING_ERROR, INVALID_REFRESH_TOKEN } from \"@nhost/core\";\nvar isBrowser = function isBrowser() {\n  return typeof window !== \"undefined\";\n};\nvar _getSession = function getSession(context) {\n  if (!context || !context.accessToken.value || !context.refreshToken.value || !context.accessToken.expiresAt || !context.user) {\n    return null;\n  }\n  return {\n    accessToken: context.accessToken.value,\n    accessTokenExpiresIn: (context.accessToken.expiresAt.getTime() - Date.now()) / 1e3,\n    refreshToken: context.refreshToken.value,\n    user: context.user\n  };\n};\nvar getAuthenticationResult = function getAuthenticationResult(_ref) {\n  var accessToken = _ref.accessToken,\n    isError = _ref.isError,\n    user = _ref.user,\n    error = _ref.error;\n  if (isError) {\n    return {\n      session: null,\n      error: error\n    };\n  }\n  if (user && accessToken) {\n    return {\n      session: {\n        accessToken: accessToken,\n        accessTokenExpiresIn: 0,\n        refreshToken: \"\",\n        user: user\n      },\n      error: null\n    };\n  }\n  return {\n    session: null,\n    error: null\n  };\n};\nvar HasuraAuthClient = /*#__PURE__*/function () {\n  function HasuraAuthClient(_ref2) {\n    var url = _ref2.url,\n      _ref2$autoRefreshToke = _ref2.autoRefreshToken,\n      autoRefreshToken = _ref2$autoRefreshToke === void 0 ? true : _ref2$autoRefreshToke,\n      _ref2$autoSignIn = _ref2.autoSignIn,\n      autoSignIn = _ref2$autoSignIn === void 0 ? true : _ref2$autoSignIn,\n      autoLogin = _ref2.autoLogin,\n      clientStorage = _ref2.clientStorage,\n      clientStorageType = _ref2.clientStorageType,\n      clientStorageGetter = _ref2.clientStorageGetter,\n      clientStorageSetter = _ref2.clientStorageSetter,\n      refreshIntervalTime = _ref2.refreshIntervalTime,\n      _ref2$start = _ref2.start,\n      start = _ref2$start === void 0 ? true : _ref2$start;\n    _classCallCheck(this, HasuraAuthClient);\n    var _a;\n    this.url = url;\n    this._client = new AuthClient({\n      backendUrl: url,\n      clientUrl: typeof window !== \"undefined\" && ((_a = window.location) == null ? void 0 : _a.origin) || \"\",\n      autoRefreshToken: autoRefreshToken,\n      autoSignIn: typeof autoLogin === \"boolean\" ? autoLogin : autoSignIn,\n      start: start,\n      clientStorage: clientStorage,\n      clientStorageType: clientStorageType,\n      clientStorageGetter: clientStorageGetter,\n      clientStorageSetter: clientStorageSetter,\n      refreshIntervalTime: refreshIntervalTime\n    });\n  }\n  _createClass(HasuraAuthClient, [{\n    key: \"signUp\",\n    value: function () {\n      var _signUp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(params) {\n        var interpreter, email, options;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.waitUntilReady();\n              case 2:\n                interpreter = _context.sent;\n                email = params.email, options = params.options;\n                if (!(\"securityKey\" in params)) {\n                  _context.next = 10;\n                  break;\n                }\n                _context.t0 = getAuthenticationResult;\n                _context.next = 8;\n                return signUpEmailSecurityKeyPromise(interpreter, email, options);\n              case 8:\n                _context.t1 = _context.sent;\n                return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n              case 10:\n                _context.t2 = getAuthenticationResult;\n                _context.next = 13;\n                return signUpEmailPasswordPromise(interpreter, email, params.password, options);\n              case 13:\n                _context.t3 = _context.sent;\n                return _context.abrupt(\"return\", (0, _context.t2)(_context.t3));\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function signUp(_x) {\n        return _signUp.apply(this, arguments);\n      }\n      return signUp;\n    }()\n  }, {\n    key: \"signIn\",\n    value: function () {\n      var _signIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(params) {\n        var interpreter, provider, options, providerUrl, res, _res, email, _options, _yield$signInEmailPas, error, _res2, _yield$signInSmsPassw, _error, _res3, anonymousResult;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.waitUntilReady();\n              case 2:\n                interpreter = _context2.sent;\n                if (!(\"provider\" in params)) {\n                  _context2.next = 8;\n                  break;\n                }\n                provider = params.provider, options = params.options;\n                providerUrl = encodeQueryParameters(\"\".concat(this._client.backendUrl, \"/signin/provider/\").concat(provider), rewriteRedirectTo(this._client.clientUrl, options));\n                if (isBrowser()) {\n                  window.location.href = providerUrl;\n                }\n                return _context2.abrupt(\"return\", {\n                  providerUrl: providerUrl,\n                  provider: provider,\n                  session: null,\n                  mfa: null,\n                  error: null\n                });\n              case 8:\n                if (!(\"email\" in params && \"password\" in params)) {\n                  _context2.next = 17;\n                  break;\n                }\n                _context2.next = 11;\n                return signInEmailPasswordPromise(interpreter, params.email, params.password);\n              case 11:\n                res = _context2.sent;\n                if (!res.needsEmailVerification) {\n                  _context2.next = 14;\n                  break;\n                }\n                return _context2.abrupt(\"return\", {\n                  session: null,\n                  mfa: null,\n                  error: EMAIL_NEEDS_VERIFICATION\n                });\n              case 14:\n                if (!res.needsMfaOtp) {\n                  _context2.next = 16;\n                  break;\n                }\n                return _context2.abrupt(\"return\", {\n                  session: null,\n                  mfa: res.mfa,\n                  error: null\n                });\n              case 16:\n                return _context2.abrupt(\"return\", __spreadProps(__spreadValues({}, getAuthenticationResult(res)), {\n                  mfa: null\n                }));\n              case 17:\n                if (!(\"email\" in params && \"securityKey\" in params)) {\n                  _context2.next = 24;\n                  break;\n                }\n                if (!(params.securityKey !== true)) {\n                  _context2.next = 20;\n                  break;\n                }\n                throw Error(\"securityKey must be true\");\n              case 20:\n                _context2.next = 22;\n                return signInEmailSecurityKeyPromise(interpreter, params.email);\n              case 22:\n                _res = _context2.sent;\n                return _context2.abrupt(\"return\", __spreadProps(__spreadValues({}, getAuthenticationResult(_res)), {\n                  mfa: null\n                }));\n              case 24:\n                if (!(\"email\" in params)) {\n                  _context2.next = 31;\n                  break;\n                }\n                email = params.email, _options = params.options;\n                _context2.next = 28;\n                return signInEmailPasswordlessPromise(interpreter, email, _options);\n              case 28:\n                _yield$signInEmailPas = _context2.sent;\n                error = _yield$signInEmailPas.error;\n                return _context2.abrupt(\"return\", {\n                  session: null,\n                  mfa: null,\n                  error: error\n                });\n              case 31:\n                if (!(\"phoneNumber\" in params && \"otp\" in params)) {\n                  _context2.next = 36;\n                  break;\n                }\n                _context2.next = 34;\n                return signInSmsPasswordlessOtpPromise(interpreter, params.phoneNumber, params.otp);\n              case 34:\n                _res2 = _context2.sent;\n                return _context2.abrupt(\"return\", __spreadProps(__spreadValues({}, getAuthenticationResult(_res2)), {\n                  mfa: null\n                }));\n              case 36:\n                if (!(\"phoneNumber\" in params)) {\n                  _context2.next = 42;\n                  break;\n                }\n                _context2.next = 39;\n                return signInSmsPasswordlessPromise(interpreter, params.phoneNumber, params.options);\n              case 39:\n                _yield$signInSmsPassw = _context2.sent;\n                _error = _yield$signInSmsPassw.error;\n                return _context2.abrupt(\"return\", {\n                  error: _error,\n                  mfa: null,\n                  session: null\n                });\n              case 42:\n                if (!(\"otp\" in params)) {\n                  _context2.next = 47;\n                  break;\n                }\n                _context2.next = 45;\n                return signInMfaTotpPromise(interpreter, params.otp, params.ticket);\n              case 45:\n                _res3 = _context2.sent;\n                return _context2.abrupt(\"return\", __spreadProps(__spreadValues({}, getAuthenticationResult(_res3)), {\n                  mfa: null\n                }));\n              case 47:\n                _context2.next = 49;\n                return signInAnonymousPromise(interpreter);\n              case 49:\n                anonymousResult = _context2.sent;\n                return _context2.abrupt(\"return\", __spreadProps(__spreadValues({}, getAuthenticationResult(anonymousResult)), {\n                  mfa: null\n                }));\n              case 51:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function signIn(_x2) {\n        return _signIn.apply(this, arguments);\n      }\n      return signIn;\n    }()\n  }, {\n    key: \"signOut\",\n    value: function () {\n      var _signOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(params) {\n        var interpreter, _yield$signOutPromise, error;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.waitUntilReady();\n              case 2:\n                interpreter = _context3.sent;\n                _context3.next = 5;\n                return signOutPromise(interpreter, params == null ? void 0 : params.all);\n              case 5:\n                _yield$signOutPromise = _context3.sent;\n                error = _yield$signOutPromise.error;\n                return _context3.abrupt(\"return\", {\n                  error: error\n                });\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function signOut(_x3) {\n        return _signOut.apply(this, arguments);\n      }\n      return signOut;\n    }()\n  }, {\n    key: \"resetPassword\",\n    value: function () {\n      var _resetPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(_ref3) {\n        var email, options, service, _yield$resetPasswordP, error;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                email = _ref3.email, options = _ref3.options;\n                service = interpret(createResetPasswordMachine(this._client)).start();\n                _context4.next = 4;\n                return resetPasswordPromise(service, email, options);\n              case 4:\n                _yield$resetPasswordP = _context4.sent;\n                error = _yield$resetPasswordP.error;\n                return _context4.abrupt(\"return\", {\n                  error: error\n                });\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function resetPassword(_x4) {\n        return _resetPassword.apply(this, arguments);\n      }\n      return resetPassword;\n    }()\n  }, {\n    key: \"changePassword\",\n    value: function () {\n      var _changePassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(_ref4) {\n        var newPassword, ticket, service, _yield$changePassword, error;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                newPassword = _ref4.newPassword, ticket = _ref4.ticket;\n                service = interpret(createChangePasswordMachine(this._client)).start();\n                _context5.next = 4;\n                return changePasswordPromise(service, newPassword, ticket);\n              case 4:\n                _yield$changePassword = _context5.sent;\n                error = _yield$changePassword.error;\n                return _context5.abrupt(\"return\", {\n                  error: error\n                });\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function changePassword(_x5) {\n        return _changePassword.apply(this, arguments);\n      }\n      return changePassword;\n    }()\n  }, {\n    key: \"sendVerificationEmail\",\n    value: function () {\n      var _sendVerificationEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(_ref5) {\n        var email, options, service, _yield$sendVerificati, error;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                email = _ref5.email, options = _ref5.options;\n                service = interpret(createSendVerificationEmailMachine(this._client)).start();\n                _context6.next = 4;\n                return sendVerificationEmailPromise(service, email, options);\n              case 4:\n                _yield$sendVerificati = _context6.sent;\n                error = _yield$sendVerificati.error;\n                return _context6.abrupt(\"return\", {\n                  error: error\n                });\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n      function sendVerificationEmail(_x6) {\n        return _sendVerificationEmail.apply(this, arguments);\n      }\n      return sendVerificationEmail;\n    }()\n  }, {\n    key: \"changeEmail\",\n    value: function () {\n      var _changeEmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(_ref6) {\n        var newEmail, options, service, _yield$changeEmailPro, error;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                newEmail = _ref6.newEmail, options = _ref6.options;\n                service = interpret(createChangeEmailMachine(this._client)).start();\n                _context7.next = 4;\n                return changeEmailPromise(service, newEmail, options);\n              case 4:\n                _yield$changeEmailPro = _context7.sent;\n                error = _yield$changeEmailPro.error;\n                return _context7.abrupt(\"return\", {\n                  error: error\n                });\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n      function changeEmail(_x7) {\n        return _changeEmail.apply(this, arguments);\n      }\n      return changeEmail;\n    }()\n  }, {\n    key: \"deanonymize\",\n    value: function () {\n      var _deanonymize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(params) {\n        var interpreter, _yield$signInEmailPas2, error, _yield$signInSmsPassw2, _error2, _yield$signUpEmailPas, _error3;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.waitUntilReady();\n              case 2:\n                interpreter = _context8.sent;\n                if (!(params.signInMethod === \"passwordless\")) {\n                  _context8.next = 16;\n                  break;\n                }\n                if (!(params.connection === \"email\")) {\n                  _context8.next = 10;\n                  break;\n                }\n                _context8.next = 7;\n                return signInEmailPasswordlessPromise(interpreter, params.email, params.options);\n              case 7:\n                _yield$signInEmailPas2 = _context8.sent;\n                error = _yield$signInEmailPas2.error;\n                return _context8.abrupt(\"return\", {\n                  error: error\n                });\n              case 10:\n                if (!(params.connection === \"sms\")) {\n                  _context8.next = 16;\n                  break;\n                }\n                _context8.next = 13;\n                return signInSmsPasswordlessPromise(interpreter, params.phoneNumber, params.options);\n              case 13:\n                _yield$signInSmsPassw2 = _context8.sent;\n                _error2 = _yield$signInSmsPassw2.error;\n                return _context8.abrupt(\"return\", {\n                  error: _error2\n                });\n              case 16:\n                if (!(params.signInMethod === \"email-password\")) {\n                  _context8.next = 22;\n                  break;\n                }\n                _context8.next = 19;\n                return signUpEmailPasswordPromise(interpreter, params.email, params.password, params.options);\n              case 19:\n                _yield$signUpEmailPas = _context8.sent;\n                _error3 = _yield$signUpEmailPas.error;\n                return _context8.abrupt(\"return\", {\n                  error: _error3\n                });\n              case 22:\n                throw Error(\"Unknown deanonymization method\");\n              case 23:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n      function deanonymize(_x8) {\n        return _deanonymize.apply(this, arguments);\n      }\n      return deanonymize;\n    }()\n  }, {\n    key: \"addSecurityKey\",\n    value: function () {\n      var _addSecurityKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(nickname) {\n        var _yield$addSecurityKey, error, key;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return addSecurityKeyPromise(this._client, nickname);\n              case 2:\n                _yield$addSecurityKey = _context9.sent;\n                error = _yield$addSecurityKey.error;\n                key = _yield$addSecurityKey.key;\n                return _context9.abrupt(\"return\", {\n                  error: error,\n                  key: key\n                });\n              case 6:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n      function addSecurityKey(_x9) {\n        return _addSecurityKey.apply(this, arguments);\n      }\n      return addSecurityKey;\n    }()\n  }, {\n    key: \"onTokenChanged\",\n    value: function onTokenChanged(fn) {\n      var listen = function listen(interpreter) {\n        return interpreter.onTransition(function (_ref7) {\n          var event = _ref7.event,\n            context = _ref7.context;\n          if (event.type === \"TOKEN_CHANGED\") {\n            fn(_getSession(context));\n          }\n        });\n      };\n      if (this._client.interpreter) {\n        var subscription = listen(this._client.interpreter);\n        return function () {\n          return subscription.stop();\n        };\n      } else {\n        this._client.onStart(function (client) {\n          listen(client.interpreter);\n        });\n        return function () {\n          console.log(\"onTokenChanged was added before the interpreter started. Cannot unsubscribe listener.\");\n        };\n      }\n    }\n  }, {\n    key: \"onAuthStateChanged\",\n    value: function onAuthStateChanged(fn) {\n      var listen = function listen(interpreter) {\n        return interpreter.onTransition(function (_ref8) {\n          var event = _ref8.event,\n            context = _ref8.context;\n          if (event.type === \"SIGNED_IN\" || event.type === \"SIGNED_OUT\") {\n            fn(event.type, _getSession(context));\n          }\n        });\n      };\n      if (this._client.interpreter) {\n        var subscription = listen(this._client.interpreter);\n        return function () {\n          return subscription.stop();\n        };\n      } else {\n        this._client.onStart(function (client) {\n          listen(client.interpreter);\n        });\n        return function () {\n          console.log(\"onAuthStateChanged was added before the interpreter started. Cannot unsubscribe listener.\");\n        };\n      }\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      var _a;\n      return !!((_a = this._client.interpreter) == null ? void 0 : _a.state.matches({\n        authentication: \"signedIn\"\n      }));\n    }\n  }, {\n    key: \"isAuthenticatedAsync\",\n    value: function () {\n      var _isAuthenticatedAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var interpreter;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.waitUntilReady();\n              case 2:\n                interpreter = _context10.sent;\n                return _context10.abrupt(\"return\", interpreter.state.matches({\n                  authentication: \"signedIn\"\n                }));\n              case 4:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n      function isAuthenticatedAsync() {\n        return _isAuthenticatedAsync.apply(this, arguments);\n      }\n      return isAuthenticatedAsync;\n    }()\n  }, {\n    key: \"getAuthenticationStatus\",\n    value: function getAuthenticationStatus() {\n      if (!this.isReady()) {\n        return {\n          isAuthenticated: false,\n          isLoading: true\n        };\n      }\n      return {\n        isAuthenticated: this.isAuthenticated(),\n        isLoading: false\n      };\n    }\n  }, {\n    key: \"getJWTToken\",\n    value: function getJWTToken() {\n      return this.getAccessToken();\n    }\n  }, {\n    key: \"getAccessToken\",\n    value: function getAccessToken() {\n      var _a, _b;\n      return (_b = (_a = this._client.interpreter) == null ? void 0 : _a.state.context.accessToken.value) != null ? _b : void 0;\n    }\n  }, {\n    key: \"getDecodedAccessToken\",\n    value: function getDecodedAccessToken() {\n      var jwt = this.getAccessToken();\n      if (!jwt) return null;\n      return jwt_decode(jwt);\n    }\n  }, {\n    key: \"getHasuraClaims\",\n    value: function getHasuraClaims() {\n      var _a;\n      return ((_a = this.getDecodedAccessToken()) == null ? void 0 : _a[\"https://hasura.io/jwt/claims\"]) || null;\n    }\n  }, {\n    key: \"getHasuraClaim\",\n    value: function getHasuraClaim(name) {\n      var _a;\n      return ((_a = this.getHasuraClaims()) == null ? void 0 : _a[name.startsWith(\"x-hasura-\") ? name : \"x-hasura-\".concat(name)]) || null;\n    }\n  }, {\n    key: \"refreshSession\",\n    value: function () {\n      var _refreshSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(refreshToken) {\n        var interpreter;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.prev = 0;\n                _context11.next = 3;\n                return this.waitUntilReady();\n              case 3:\n                interpreter = _context11.sent;\n                return _context11.abrupt(\"return\", new Promise(function (resolve) {\n                  var token = refreshToken || interpreter.state.context.refreshToken.value;\n                  if (!token) {\n                    return resolve({\n                      session: null,\n                      error: NO_REFRESH_TOKEN\n                    });\n                  }\n                  var _interpreter$send = interpreter.send(\"TRY_TOKEN\", {\n                      token: token\n                    }),\n                    changed = _interpreter$send.changed;\n                  if (!changed) {\n                    return resolve({\n                      session: null,\n                      error: TOKEN_REFRESHER_RUNNING_ERROR\n                    });\n                  }\n                  interpreter.onTransition(function (state) {\n                    if (state.matches({\n                      token: {\n                        idle: \"error\"\n                      }\n                    })) {\n                      resolve({\n                        session: null,\n                        error: INVALID_REFRESH_TOKEN\n                      });\n                    } else if (state.event.type === \"TOKEN_CHANGED\") {\n                      resolve({\n                        session: _getSession(state.context),\n                        error: null\n                      });\n                    }\n                  });\n                }));\n              case 7:\n                _context11.prev = 7;\n                _context11.t0 = _context11[\"catch\"](0);\n                return _context11.abrupt(\"return\", {\n                  session: null,\n                  error: _context11.t0.message\n                });\n              case 10:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[0, 7]]);\n      }));\n      function refreshSession(_x10) {\n        return _refreshSession.apply(this, arguments);\n      }\n      return refreshSession;\n    }()\n  }, {\n    key: \"getSession\",\n    value: function getSession() {\n      var _a, _b;\n      return _getSession((_b = (_a = this._client.interpreter) == null ? void 0 : _a.state) == null ? void 0 : _b.context);\n    }\n  }, {\n    key: \"getUser\",\n    value: function getUser() {\n      var _a, _b, _c;\n      return ((_c = (_b = (_a = this._client.interpreter) == null ? void 0 : _a.state) == null ? void 0 : _b.context) == null ? void 0 : _c.user) || null;\n    }\n  }, {\n    key: \"waitUntilReady\",\n    value: function waitUntilReady() {\n      var TIMEOUT_IN_SECONS = 15;\n      var interpreter = this._client.interpreter;\n      if (!interpreter) {\n        throw Error(\"Auth interpreter not set\");\n      }\n      if (!interpreter.state.hasTag(\"loading\")) {\n        return Promise.resolve(interpreter);\n      }\n      return new Promise(function (resolve, reject) {\n        var timer = setTimeout(function () {\n          return reject(\"The state machine is not yet ready after \".concat(TIMEOUT_IN_SECONS, \" seconds.\"));\n        }, TIMEOUT_IN_SECONS * 1e3);\n        interpreter.onTransition(function (state) {\n          if (!state.hasTag(\"loading\")) {\n            clearTimeout(timer);\n            return resolve(interpreter);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"isReady\",\n    value: function isReady() {\n      var _a, _b;\n      return !((_b = (_a = this._client.interpreter) == null ? void 0 : _a.state) == null ? void 0 : _b.hasTag(\"loading\"));\n    }\n  }, {\n    key: \"client\",\n    get: function get() {\n      return this._client;\n    }\n  }]);\n  return HasuraAuthClient;\n}();\nexport { HasuraAuthClient };","map":null,"metadata":{},"sourceType":"module"}