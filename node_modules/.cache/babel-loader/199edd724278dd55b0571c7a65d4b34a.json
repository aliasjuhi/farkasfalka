{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Alias\\\\weboldal\\\\web-login\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Alias\\\\weboldal\\\\web-login\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Alias\\\\weboldal\\\\web-login\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Alias\\\\weboldal\\\\web-login\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Alias\\\\weboldal\\\\web-login\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Alias\\\\weboldal\\\\web-login\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\nvar __objRest = function __objRest(source, exclude) {\n  var target = {};\n  for (var prop in source) {\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  }\n  if (source != null && __getOwnPropSymbols) {\n    var _iterator2 = _createForOfIteratorHelper(__getOwnPropSymbols(source)),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var prop = _step2.value;\n        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return target;\n};\nimport { NhostClient as NhostClient$1 } from \"@nhost/nhost-js\";\nimport produce from \"immer\";\nimport React, { createContext, useRef, useEffect, useContext, useState, useMemo, useCallback } from \"react\";\nimport { useInterpret, useSelector } from \"@xstate/react\";\nimport { addSecurityKeyPromise, createChangeEmailMachine, changeEmailPromise, createChangePasswordMachine, changePasswordPromise, createEnableMfaMachine, generateQrCodePromise, activateMfaPromise, encodeQueryParameters, rewriteRedirectTo, createResetPasswordMachine, resetPasswordPromise, createSendVerificationEmailMachine, sendVerificationEmailPromise, signInAnonymousPromise, signInEmailPasswordPromise, signInMfaTotpPromise, signInEmailPasswordlessPromise, signInEmailSecurityKeyPromise, signInSmsPasswordlessPromise, signInSmsPasswordlessOtpPromise, signOutPromise, signUpEmailPasswordPromise, signUpEmailSecurityKeyPromise } from \"@nhost/core\";\nimport jwt_decode from \"jwt-decode\";\nimport { createFileUploadMachine, uploadFilePromise, createMultipleFilesUploadMachine, uploadMultipleFilesPromise } from \"@nhost/hasura-storage-js\";\nvar NhostClient = /*#__PURE__*/function (_NhostClient$) {\n  _inherits(NhostClient, _NhostClient$);\n  function NhostClient(params) {\n    _classCallCheck(this, NhostClient);\n    return _possibleConstructorReturn(this, _getPrototypeOf(NhostClient).call(this, __spreadProps(__spreadValues({}, params), {\n      start: false\n    })));\n  }\n  return NhostClient;\n}(NhostClient$1);\nvar NhostReactContext = createContext({});\nvar NhostReactProvider = function NhostReactProvider(_a) {\n  var _b = _a,\n    nhost = _b.nhost,\n    initial = _b.initial,\n    props = __objRest(_b, [\"nhost\", \"initial\"]);\n  var machine = nhost.auth.client.machine;\n  var interpreter = useInterpret(machine, {\n    devTools: nhost.devTools,\n    context: produce(machine.context, function (ctx) {\n      var _a2, _b2;\n      if (initial) {\n        ctx.user = initial.user;\n        ctx.refreshToken.value = (_a2 = initial.refreshToken) != null ? _a2 : null;\n        ctx.accessToken.value = (_b2 = initial.accessToken) != null ? _b2 : null;\n        ctx.accessToken.expiresAt = new Date(Date.now() + initial.accessTokenExpiresIn * 1e3);\n      }\n    })\n  }).start();\n  var isInitialMount = useRef(true);\n  useEffect(function () {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      if (initial) {\n        interpreter.send(\"SESSION_UPDATE\", {\n          data: {\n            session: initial\n          }\n        });\n      }\n    }\n  }, [initial, interpreter]);\n  nhost.auth.client.interpreter = interpreter;\n  return /* @__PURE__ */React.createElement(NhostReactContext.Provider, {\n    value: nhost\n  }, props.children);\n};\nvar useAuthInterpreter = function useAuthInterpreter() {\n  var _a;\n  var nhost = useContext(NhostReactContext);\n  var interpreter = (_a = nhost.auth) == null ? void 0 : _a.client.interpreter;\n  if (!interpreter) throw Error(\"No interpreter\");\n  return interpreter;\n};\nvar useAccessToken = function useAccessToken() {\n  var service = useAuthInterpreter();\n  return useSelector(service, function (state) {\n    return state.context.accessToken.value;\n  });\n};\nvar useNhostClient = function useNhostClient() {\n  var nhost = useContext(NhostReactContext);\n  return nhost;\n};\nvar useAddSecurityKey = function useAddSecurityKey() {\n  var nhost = useNhostClient();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    error = _useState2[0],\n    setError = _useState2[1];\n  var isSuccess = !error;\n  var isError = !!error;\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var add = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(nickname) {\n      var result, error2;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true);\n              _context.next = 3;\n              return addSecurityKeyPromise(nhost.auth.client, nickname);\n            case 3:\n              result = _context.sent;\n              error2 = result.error;\n              if (error2) {\n                setError(error2);\n              }\n              setIsLoading(false);\n              return _context.abrupt(\"return\", result);\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function add(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return {\n    add: add,\n    isLoading: isLoading,\n    isSuccess: isSuccess,\n    isError: isError,\n    error: error\n  };\n};\nvar useAuthenticated = function useAuthenticated() {\n  var service = useAuthInterpreter();\n  var _useState5 = useState(!!service.status && service.state.matches({\n      authentication: \"signedIn\"\n    })),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isAuthenticated = _useState6[0],\n    setIsAuthenticated = _useState6[1];\n  useEffect(function () {\n    var subscription = service.subscribe(function (state) {\n      var newValue = state.matches({\n        authentication: \"signedIn\"\n      });\n      setIsAuthenticated(newValue);\n    });\n    return subscription.unsubscribe;\n  }, [service]);\n  return isAuthenticated;\n};\nvar useAuthenticationStatus = function useAuthenticationStatus() {\n  var service = useAuthInterpreter();\n  return useSelector(service, function (state) {\n    return {\n      isAuthenticated: state.matches({\n        authentication: \"signedIn\"\n      }),\n      isLoading: state.hasTag(\"loading\"),\n      error: state.context.errors.authentication || null,\n      isError: state.matches({\n        authentication: {\n          signedOut: \"failed\"\n        }\n      })\n    };\n  }, function (a, b) {\n    return a.isAuthenticated === b.isAuthenticated && a.isLoading === b.isLoading;\n  });\n};\nvar useAuthLoading = function useAuthLoading() {\n  var service = useAuthInterpreter();\n  return useSelector(service, function (state) {\n    return state.hasTag(\"loading\");\n  });\n};\nfunction useChangeEmail(a, b) {\n  var stateEmail = useMemo(function () {\n    return typeof a === \"string\" ? a : void 0;\n  }, [a]);\n  var stateOptions = useMemo(function () {\n    return typeof a !== \"string\" ? a : b;\n  }, [a, b]);\n  var nhost = useNhostClient();\n  var machine = useMemo(function () {\n    return createChangeEmailMachine(nhost.auth.client);\n  }, [nhost]);\n  var service = useInterpret(machine);\n  var isLoading = useSelector(service, function (s) {\n    return s.matches(\"requesting\");\n  });\n  var error = useSelector(service, function (state) {\n    return state.context.error;\n  });\n  var isError = useSelector(service, function (state) {\n    return state.matches(\"idle.error\");\n  });\n  var needsEmailVerification = useSelector(service, function (state) {\n    return state.matches(\"idle.success\");\n  });\n  var changeEmail = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(valueEmail) {\n      var valueOptions,\n        _args2 = arguments;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              valueOptions = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : stateOptions;\n              return _context2.abrupt(\"return\", changeEmailPromise(service, typeof valueEmail === \"string\" ? valueEmail : stateEmail, valueOptions));\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [service, stateEmail, stateOptions]);\n  return {\n    changeEmail: changeEmail,\n    isLoading: isLoading,\n    needsEmailVerification: needsEmailVerification,\n    isError: isError,\n    error: error\n  };\n}\nvar useChangePassword = function useChangePassword(statePassword) {\n  var nhost = useNhostClient();\n  var machine = useMemo(function () {\n    return createChangePasswordMachine(nhost.auth.client);\n  }, [nhost]);\n  var service = useInterpret(machine);\n  var isError = useSelector(service, function (state) {\n    return state.matches({\n      idle: \"error\"\n    });\n  });\n  var isSuccess = useSelector(service, function (state) {\n    return state.matches({\n      idle: \"success\"\n    });\n  });\n  var error = useSelector(service, function (state) {\n    return state.context.error;\n  });\n  var isLoading = useSelector(service, function (state) {\n    return state.matches(\"requesting\");\n  });\n  var changePassword = function changePassword(valuePassword) {\n    return changePasswordPromise(service, typeof valuePassword === \"string\" ? valuePassword : statePassword);\n  };\n  return {\n    changePassword: changePassword,\n    isLoading: isLoading,\n    isSuccess: isSuccess,\n    isError: isError,\n    error: error\n  };\n};\nvar useConfigMfa = function useConfigMfa() {\n  var nhost = useNhostClient();\n  var machine = useMemo(function () {\n    return createEnableMfaMachine(nhost.auth.client);\n  }, [nhost]);\n  var service = useInterpret(machine);\n  var isError = useSelector(service, function (state) {\n    return state.matches({\n      idle: \"error\"\n    }) || state.matches({\n      generated: {\n        idle: \"error\"\n      }\n    });\n  });\n  var isGenerating = useSelector(service, function (state) {\n    return state.matches(\"generating\");\n  });\n  var isGenerated = useSelector(service, function (state) {\n    return state.matches(\"generated\");\n  });\n  var isActivating = useSelector(service, function (state) {\n    return state.matches({\n      generated: \"activating\"\n    });\n  });\n  var isActivated = useSelector(service, function (state) {\n    return state.matches({\n      generated: \"activated\"\n    });\n  });\n  var error = useSelector(service, function (state) {\n    return state.context.error;\n  });\n  var qrCodeDataUrl = useSelector(service, function (state) {\n    return state.context.imageUrl || \"\";\n  });\n  var generateQrCode = function generateQrCode() {\n    return generateQrCodePromise(service);\n  };\n  var activateMfa = function activateMfa(code) {\n    return activateMfaPromise(service, code);\n  };\n  return {\n    generateQrCode: generateQrCode,\n    isGenerating: isGenerating,\n    qrCodeDataUrl: qrCodeDataUrl,\n    isGenerated: isGenerated,\n    activateMfa: activateMfa,\n    isActivating: isActivating,\n    isActivated: isActivated,\n    isError: isError,\n    error: error\n  };\n};\nvar useDecodedAccessToken = function useDecodedAccessToken() {\n  var jwt = useAccessToken();\n  return jwt ? jwt_decode(jwt) : null;\n};\nvar useFileUploadItem = function useFileUploadItem(ref) {\n  var nhost = useNhostClient();\n  var add = function add(params) {\n    ref.send({\n      type: \"ADD\",\n      file: params.file,\n      bucketId: params.bucketId || bucketId\n    });\n  };\n  var upload = function upload(params) {\n    return uploadFilePromise(nhost, ref, {\n      file: params.file,\n      bucketId: params.bucketId || bucketId,\n      id: id,\n      name: name\n    });\n  };\n  var cancel = function cancel() {\n    ref.send(\"CANCEL\");\n  };\n  var destroy = function destroy() {\n    ref.send(\"DESTROY\");\n  };\n  var isUploading = useSelector(ref, function (state) {\n    return state.matches(\"uploading\");\n  });\n  var isUploaded = useSelector(ref, function (state) {\n    return state.matches(\"uploaded\");\n  });\n  var isError = useSelector(ref, function (state) {\n    return state.matches(\"error\");\n  });\n  var error = useSelector(ref, function (state) {\n    return state.context.error || null;\n  });\n  var progress = useSelector(ref, function (state) {\n    return state.context.progress;\n  });\n  var id = useSelector(ref, function (state) {\n    return state.context.id;\n  });\n  var bucketId = useSelector(ref, function (state) {\n    return state.context.bucketId;\n  });\n  var name = useSelector(ref, function (state) {\n    var _a;\n    return (_a = state.context.file) == null ? void 0 : _a.name;\n  });\n  return {\n    add: add,\n    upload: upload,\n    cancel: cancel,\n    destroy: destroy,\n    isUploaded: isUploaded,\n    isUploading: isUploading,\n    isError: isError,\n    error: error,\n    progress: progress,\n    id: id,\n    bucketId: bucketId,\n    name: name\n  };\n};\nvar useFileUpload = function useFileUpload() {\n  var service = useInterpret(createFileUploadMachine);\n  return useFileUploadItem(service);\n};\nvar useHasuraClaims = function useHasuraClaims() {\n  var claims = useDecodedAccessToken();\n  return (claims == null ? void 0 : claims[\"https://hasura.io/jwt/claims\"]) || null;\n};\nvar useHasuraClaim = function useHasuraClaim(name) {\n  var hasuraClaims = useHasuraClaims();\n  return (hasuraClaims == null ? void 0 : hasuraClaims[name.startsWith(\"x-hasura-\") ? name : \"x-hasura-\".concat(name)]) || null;\n};\nvar useMultipleFilesUpload = function useMultipleFilesUpload() {\n  var nhost = useNhostClient();\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    errors = _useState8[0],\n    setErrors = _useState8[1];\n  var service = useInterpret(createMultipleFilesUploadMachine, {}, function (state) {\n    if (state.event.type === \"UPLOAD_ERROR\") {\n      setErrors(state.context.files.filter(function (ref) {\n        var _a;\n        return (_a = ref.getSnapshot()) == null ? void 0 : _a.context.error;\n      }));\n    } else if ((state.matches(\"uploaded\") || state.event.type === \"CLEAR\") && errors.length > 0) {\n      setErrors([]);\n    }\n  });\n  var add = function add(params) {\n    service.send(__spreadValues({\n      type: \"ADD\"\n    }, params));\n  };\n  var upload = function upload(params) {\n    return uploadMultipleFilesPromise(nhost, service, params);\n  };\n  var cancel = function cancel() {\n    service.send(\"CANCEL\");\n  };\n  var clear = function clear() {\n    service.send(\"CLEAR\");\n  };\n  var isUploading = useSelector(service, function (state) {\n    return state.matches(\"uploading\");\n  });\n  var isUploaded = useSelector(service, function (state) {\n    return state.matches(\"uploaded\");\n  });\n  var isError = useSelector(service, function (state) {\n    return state.matches(\"error\");\n  });\n  var progress = useSelector(service, function (state) {\n    return state.context.progress;\n  });\n  var files = useSelector(service, function (state) {\n    return state.context.files;\n  });\n  return {\n    upload: upload,\n    add: add,\n    clear: clear,\n    cancel: cancel,\n    progress: progress,\n    isUploaded: isUploaded,\n    isUploading: isUploading,\n    files: files,\n    isError: isError,\n    errors: errors\n  };\n};\nvar useUserData = function useUserData() {\n  var service = useAuthInterpreter();\n  return useSelector(service, function (state) {\n    return state.context.user;\n  }, function (a, b) {\n    return (a && JSON.stringify(a)) === (b && JSON.stringify(b));\n  });\n};\nvar useNhostAuth = function useNhostAuth() {\n  var _useAuthenticationSta = useAuthenticationStatus(),\n    isLoading = _useAuthenticationSta.isLoading,\n    isAuthenticated = _useAuthenticationSta.isAuthenticated;\n  var user = useUserData();\n  return useMemo(function () {\n    return {\n      isLoading: isLoading,\n      isAuthenticated: isAuthenticated,\n      user: user\n    };\n  }, [isLoading, isAuthenticated, user]);\n};\nvar useNhostBackendUrl = function useNhostBackendUrl() {\n  var nhost = useContext(NhostReactContext);\n  return nhost.auth.client.backendUrl.replace(\"/v1/auth\", \"\");\n};\nvar useProviderLink = function useProviderLink(options) {\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isSSR = _useState10[0],\n    setIsSSR = _useState10[1];\n  useEffect(function () {\n    setIsSSR(false);\n  }, []);\n  var nhost = useContext(NhostReactContext);\n  return new Proxy({}, {\n    get: function get(_, provider) {\n      return encodeQueryParameters(\"\".concat(nhost.auth.client.backendUrl, \"/signin/provider/\").concat(provider), rewriteRedirectTo(isSSR ? void 0 : nhost.auth.client.clientUrl, options));\n    }\n  });\n};\nvar useResetPassword = function useResetPassword(a, b) {\n  var stateEmail = typeof a === \"string\" ? a : void 0;\n  var stateOptions = typeof a !== \"string\" ? a : b;\n  var nhost = useNhostClient();\n  var machine = useMemo(function () {\n    return createResetPasswordMachine(nhost.auth.client);\n  }, [nhost]);\n  var service = useInterpret(machine);\n  var isLoading = useSelector(service, function (s) {\n    return s.matches(\"requesting\");\n  });\n  var error = useSelector(service, function (state) {\n    return state.context.error;\n  });\n  var isError = useSelector(service, function (state) {\n    return state.matches(\"idle.error\");\n  });\n  var isSent = useSelector(service, function (state) {\n    return state.matches(\"idle.success\");\n  });\n  var resetPassword = function resetPassword(valueEmail) {\n    var valueOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : stateOptions;\n    return resetPasswordPromise(service, typeof valueEmail === \"string\" ? valueEmail : stateEmail, valueOptions);\n  };\n  return {\n    resetPassword: resetPassword,\n    isLoading: isLoading,\n    isSent: isSent,\n    isError: isError,\n    error: error\n  };\n};\nvar useSendVerificationEmail = function useSendVerificationEmail(a, b) {\n  var stateEmail = typeof a === \"string\" ? a : void 0;\n  var stateOptions = typeof a !== \"string\" ? a : b;\n  var nhost = useNhostClient();\n  var machine = useMemo(function () {\n    return createSendVerificationEmailMachine(nhost.auth.client);\n  }, [nhost]);\n  var service = useInterpret(machine);\n  var isError = useSelector(service, function (state) {\n    return state.matches({\n      idle: \"error\"\n    });\n  });\n  var isSent = useSelector(service, function (state) {\n    return state.matches({\n      idle: \"success\"\n    });\n  });\n  var error = useSelector(service, function (state) {\n    return state.context.error;\n  });\n  var isLoading = useSelector(service, function (state) {\n    return state.matches(\"requesting\");\n  });\n  var sendEmail = function sendEmail(valueEmail) {\n    var valueOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : stateOptions;\n    return sendVerificationEmailPromise(service, typeof valueEmail === \"string\" ? valueEmail : stateEmail, valueOptions);\n  };\n  return {\n    sendEmail: sendEmail,\n    isLoading: isLoading,\n    isSent: isSent,\n    isError: isError,\n    error: error\n  };\n};\nvar useSignInAnonymous = function useSignInAnonymous() {\n  var service = useAuthInterpreter();\n  var signInAnonymous = function signInAnonymous() {\n    return signInAnonymousPromise(service);\n  };\n  var error = useSelector(service, function (state) {\n    return state.context.errors.authentication || null;\n  }, function (a, b) {\n    return (a == null ? void 0 : a.error) === (b == null ? void 0 : b.error);\n  });\n  var isLoading = useSelector(service, function (state) {\n    return state.matches({\n      authentication: {\n        authenticating: \"anonymous\"\n      }\n    });\n  });\n  var isSuccess = useSelector(service, function (state) {\n    return state.matches({\n      authentication: \"signedIn\"\n    });\n  });\n  var isError = useSelector(service, function (state) {\n    return state.matches({\n      authentication: {\n        signedOut: \"failed\"\n      }\n    });\n  });\n  var user = useSelector(service, function (state) {\n    return state.context.user;\n  }, function (a, b) {\n    return (a == null ? void 0 : a.id) === (b == null ? void 0 : b.id);\n  });\n  var accessToken = useSelector(service, function (state) {\n    return state.context.accessToken.value;\n  });\n  return {\n    accessToken: accessToken,\n    error: error,\n    isError: isError,\n    isLoading: isLoading,\n    isSuccess: isSuccess,\n    signInAnonymous: signInAnonymous,\n    user: user\n  };\n};\nvar useSignInEmailPassword = function useSignInEmailPassword(stateEmail, statePassword, stateOtp) {\n  var service = useAuthInterpreter();\n  var signInEmailPassword = function signInEmailPassword(valueEmail, valuePassword) {\n    return signInEmailPasswordPromise(service, typeof valueEmail === \"string\" ? valueEmail : stateEmail, typeof valuePassword === \"string\" ? valuePassword : statePassword);\n  };\n  var sendMfaOtp = function sendMfaOtp(valueOtp) {\n    return signInMfaTotpPromise(service, typeof valueOtp === \"string\" ? valueOtp : stateOtp);\n  };\n  var user = useSelector(service, function (state) {\n    return state.context.user;\n  }, function (a, b) {\n    return (a == null ? void 0 : a.id) === (b == null ? void 0 : b.id);\n  });\n  var accessToken = useSelector(service, function (state) {\n    return state.context.accessToken.value;\n  });\n  var error = useSelector(service, function (state) {\n    return state.context.errors.authentication || null;\n  }, function (a, b) {\n    return (a == null ? void 0 : a.error) === (b == null ? void 0 : b.error);\n  });\n  var isSuccess = useSelector(service, function (state) {\n    return state.matches({\n      authentication: \"signedIn\"\n    });\n  });\n  var isLoading = useSelector(service, function (state) {\n    return state.matches({\n      authentication: {\n        authenticating: \"password\"\n      }\n    });\n  }, function (a, b) {\n    return a === b;\n  });\n  var needsEmailVerification = useSelector(service, function (state) {\n    return state.matches({\n      authentication: {\n        signedOut: \"noErrors\"\n      },\n      registration: {\n        incomplete: \"needsEmailVerification\"\n      }\n    });\n  }, function (a, b) {\n    return a === b;\n  });\n  var needsMfaOtp = useSelector(service, function (state) {\n    return state.matches({\n      authentication: {\n        signedOut: \"needsMfa\"\n      }\n    });\n  }, function (a, b) {\n    return a === b;\n  });\n  var isError = useSelector(service, function (state) {\n    return state.matches({\n      authentication: {\n        signedOut: \"failed\"\n      }\n    });\n  }, function (a, b) {\n    return a === b;\n  });\n  var mfa = useSelector(service, function (state) {\n    return state.context.mfa;\n  });\n  return {\n    accessToken: accessToken,\n    error: error,\n    isError: isError,\n    isLoading: isLoading,\n    isSuccess: isSuccess,\n    needsEmailVerification: needsEmailVerification,\n    needsMfaOtp: needsMfaOtp,\n    mfa: mfa,\n    sendMfaOtp: sendMfaOtp,\n    signInEmailPassword: signInEmailPassword,\n    user: user\n  };\n};\nfunction useSignInEmailPasswordless(a, b) {\n  var stateEmail = typeof a === \"string\" ? a : void 0;\n  var stateOptions = typeof a === \"string\" ? b : a;\n  var service = useAuthInterpreter();\n  var signInEmailPasswordless = function signInEmailPasswordless(valueEmail) {\n    var valueOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : stateOptions;\n    return signInEmailPasswordlessPromise(service, typeof valueEmail === \"string\" ? valueEmail : stateEmail, valueOptions);\n  };\n  var error = useSelector(service, function (state) {\n    return state.context.errors.registration || null;\n  }, function (a2, b2) {\n    return (a2 == null ? void 0 : a2.error) === (b2 == null ? void 0 : b2.error);\n  });\n  var isLoading = useSelector(service, function (state) {\n    return state.matches(\"registration.passwordlessEmail\");\n  });\n  var isSuccess = useSelector(service, function (state) {\n    return state.matches(\"registration.incomplete.needsEmailVerification\");\n  });\n  var isError = useSelector(service, function (state) {\n    return state.matches(\"registration.incomplete.failed\");\n  });\n  return {\n    signInEmailPasswordless: signInEmailPasswordless,\n    isLoading: isLoading,\n    isSuccess: isSuccess,\n    isError: isError,\n    error: error\n  };\n}\nvar useSignInEmailSecurityKey = function useSignInEmailSecurityKey() {\n  var service = useAuthInterpreter();\n  var signInEmailSecurityKey = function signInEmailSecurityKey(email) {\n    return signInEmailSecurityKeyPromise(service, email);\n  };\n  var user = useSelector(service, function (state) {\n    return state.context.user;\n  }, function (a, b) {\n    return (a == null ? void 0 : a.id) === (b == null ? void 0 : b.id);\n  });\n  var accessToken = useSelector(service, function (state) {\n    return state.context.accessToken.value;\n  });\n  var error = useSelector(service, function (state) {\n    return state.context.errors.authentication || null;\n  }, function (a, b) {\n    return (a == null ? void 0 : a.error) === (b == null ? void 0 : b.error);\n  });\n  var isSuccess = useSelector(service, function (state) {\n    return state.matches({\n      authentication: \"signedIn\"\n    });\n  });\n  var isLoading = useSelector(service, function (state) {\n    return state.matches({\n      authentication: {\n        authenticating: \"securityKeyEmail\"\n      }\n    });\n  }, function (a, b) {\n    return a === b;\n  });\n  var needsEmailVerification = useSelector(service, function (state) {\n    return state.matches({\n      authentication: {\n        signedOut: \"noErrors\"\n      },\n      registration: {\n        incomplete: \"needsEmailVerification\"\n      }\n    });\n  }, function (a, b) {\n    return a === b;\n  });\n  var isError = useSelector(service, function (state) {\n    return state.matches({\n      authentication: {\n        signedOut: \"failed\"\n      }\n    });\n  }, function (a, b) {\n    return a === b;\n  });\n  return {\n    accessToken: accessToken,\n    error: error,\n    isError: isError,\n    isLoading: isLoading,\n    isSuccess: isSuccess,\n    needsEmailVerification: needsEmailVerification,\n    signInEmailSecurityKey: signInEmailSecurityKey,\n    user: user\n  };\n};\nfunction useSignInSmsPasswordless(stateOptions) {\n  var service = useAuthInterpreter();\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    _phoneNumber = _useState12[0],\n    setPhoneNumber = _useState12[1];\n  var signInSmsPasswordless = function signInSmsPasswordless(phoneNumber) {\n    var valueOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : stateOptions;\n    setPhoneNumber(phoneNumber);\n    return signInSmsPasswordlessPromise(service, phoneNumber, valueOptions);\n  };\n  var sendOtp = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var _len,\n        args,\n        _key,\n        phoneNumber,\n        code2,\n        code,\n        _args3 = arguments;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              for (_len = _args3.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = _args3[_key];\n              }\n              if (!(args.length === 2)) {\n                _context3.next = 4;\n                break;\n              }\n              phoneNumber = args[0], code2 = args[1];\n              return _context3.abrupt(\"return\", signInSmsPasswordlessOtpPromise(service, phoneNumber, code2));\n            case 4:\n              code = args[0];\n              return _context3.abrupt(\"return\", signInSmsPasswordlessOtpPromise(service, _phoneNumber, code));\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return function sendOtp() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var error = useSelector(service, function (state) {\n    return state.context.errors.registration || null;\n  }, function (a, b) {\n    return (a == null ? void 0 : a.error) === (b == null ? void 0 : b.error);\n  });\n  var isLoading = useSelector(service, function (state) {\n    return state.matches(\"registration.passwordlessSms\") || state.matches(\"registration.passwordlessSmsOtp\");\n  });\n  var isSuccess = useSelector(service, function (state) {\n    return state.matches(\"authentication.signedIn\");\n  });\n  var needsOtp = useSelector(service, function (state) {\n    return state.matches(\"registration.incomplete.needsOtp\");\n  });\n  var isError = useSelector(service, function (state) {\n    return state.matches(\"registration.incomplete.failed\");\n  });\n  return {\n    signInSmsPasswordless: signInSmsPasswordless,\n    sendOtp: sendOtp,\n    isLoading: isLoading,\n    isSuccess: isSuccess,\n    needsOtp: needsOtp,\n    isError: isError,\n    error: error\n  };\n}\nvar useSignOut = function useSignOut() {\n  var stateAll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var service = useAuthInterpreter();\n  var signOut = function signOut(valueAll) {\n    return signOutPromise(service, typeof valueAll === \"boolean\" ? valueAll : stateAll);\n  };\n  var isSuccess = useSelector(service, function (state) {\n    return state.matches({\n      authentication: {\n        signedOut: \"success\"\n      }\n    });\n  }, function (a, b) {\n    return a === b;\n  });\n  var error = useSelector(service, function (state) {\n    return state.context.errors.signout || null;\n  }, function (a, b) {\n    return (a == null ? void 0 : a.error) === (b == null ? void 0 : b.error);\n  });\n  return {\n    signOut: signOut,\n    isSuccess: isSuccess,\n    error: error\n  };\n};\nvar useSignUpEmailPassword = function useSignUpEmailPassword(a, b, c) {\n  var stateEmail = typeof a === \"string\" ? a : void 0;\n  var statePassword = typeof b === \"string\" ? b : void 0;\n  var stateOptions = c || (typeof a !== \"string\" ? a : void 0);\n  var service = useAuthInterpreter();\n  var isError = useSelector(service, function (state) {\n    return !!state.context.errors.registration;\n  });\n  var error = useSelector(service, function (state) {\n    return state.context.errors.registration || null;\n  }, function (a2, b2) {\n    return (a2 == null ? void 0 : a2.error) === (b2 == null ? void 0 : b2.error);\n  });\n  var isLoading = useSelector(service, function (state) {\n    return state.matches(\"registration.emailPassword\");\n  });\n  var needsEmailVerification = useSelector(service, function (state) {\n    return state.matches(\"registration.incomplete.needsEmailVerification\");\n  });\n  var isSuccess = useSelector(service, function (state) {\n    return state.matches({\n      authentication: \"signedIn\",\n      registration: \"complete\"\n    });\n  });\n  var signUpEmailPassword = function signUpEmailPassword(valueEmail) {\n    var valuePassword = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : statePassword;\n    var valueOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stateOptions;\n    return signUpEmailPasswordPromise(service, typeof valueEmail === \"string\" ? valueEmail : stateEmail, valuePassword, valueOptions);\n  };\n  var user = useSelector(service, function (state) {\n    return state.context.user;\n  }, function (a2, b2) {\n    return (a2 == null ? void 0 : a2.id) === (b2 == null ? void 0 : b2.id);\n  });\n  var accessToken = useSelector(service, function (state) {\n    return state.context.accessToken.value;\n  });\n  return {\n    accessToken: accessToken,\n    error: error,\n    isError: isError,\n    isLoading: isLoading,\n    isSuccess: isSuccess,\n    needsEmailVerification: needsEmailVerification,\n    signUpEmailPassword: signUpEmailPassword,\n    user: user\n  };\n};\nvar useSignUpEmailSecurityKeyEmail = function useSignUpEmailSecurityKeyEmail(hookOptions) {\n  var service = useAuthInterpreter();\n  var isError = useSelector(service, function (state) {\n    return !!state.context.errors.registration;\n  });\n  var error = useSelector(service, function (state) {\n    return state.context.errors.registration || null;\n  }, function (a, b) {\n    return (a == null ? void 0 : a.error) === (b == null ? void 0 : b.error);\n  });\n  var isLoading = useSelector(service, function (state) {\n    return state.matches(\"registration.securityKey\");\n  });\n  var needsEmailVerification = useSelector(service, function (state) {\n    return state.matches(\"registration.incomplete.needsEmailVerification\");\n  });\n  var isSuccess = useSelector(service, function (state) {\n    return state.matches({\n      authentication: \"signedIn\",\n      registration: \"complete\"\n    });\n  });\n  var signUpEmailSecurityKey = function signUpEmailSecurityKey(email) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : hookOptions;\n    return signUpEmailSecurityKeyPromise(service, email, options);\n  };\n  var user = useSelector(service, function (state) {\n    return state.context.user;\n  }, function (a, b) {\n    return (a == null ? void 0 : a.id) === (b == null ? void 0 : b.id);\n  });\n  var accessToken = useSelector(service, function (state) {\n    return state.context.accessToken.value;\n  });\n  return {\n    accessToken: accessToken,\n    error: error,\n    isError: isError,\n    isLoading: isLoading,\n    isSuccess: isSuccess,\n    needsEmailVerification: needsEmailVerification,\n    signUpEmailSecurityKey: signUpEmailSecurityKey,\n    user: user\n  };\n};\nvar useUserAvatarUrl = function useUserAvatarUrl() {\n  var service = useAuthInterpreter();\n  return useSelector(service, function (state) {\n    var _a;\n    return (_a = state.context.user) == null ? void 0 : _a.avatarUrl;\n  }, function (a, b) {\n    return a === b;\n  });\n};\nvar useAvatarUrl = useUserAvatarUrl;\nvar useUserDefaultRole = function useUserDefaultRole() {\n  var service = useAuthInterpreter();\n  return useSelector(service, function (state) {\n    var _a;\n    return (_a = state.context.user) == null ? void 0 : _a.defaultRole;\n  }, function (a, b) {\n    return a === b;\n  });\n};\nvar useDefaultRole = useUserDefaultRole;\nvar useUserDisplayName = function useUserDisplayName() {\n  var service = useAuthInterpreter();\n  return useSelector(service, function (state) {\n    var _a;\n    return (_a = state.context.user) == null ? void 0 : _a.displayName;\n  }, function (a, b) {\n    return a === b;\n  });\n};\nvar useDisplayName = useUserDisplayName;\nvar useUserEmail = function useUserEmail() {\n  var service = useAuthInterpreter();\n  return useSelector(service, function (state) {\n    var _a;\n    return (_a = state.context.user) == null ? void 0 : _a.email;\n  }, function (a, b) {\n    return a === b;\n  });\n};\nvar useEmail = useUserEmail;\nvar useUserId = function useUserId() {\n  var service = useAuthInterpreter();\n  return useSelector(service, function (state) {\n    var _a;\n    return (_a = state.context.user) == null ? void 0 : _a.id;\n  }, function (a, b) {\n    return a === b;\n  });\n};\nvar useUserIsAnonymous = function useUserIsAnonymous() {\n  var service = useAuthInterpreter();\n  return useSelector(service, function (state) {\n    var _a;\n    return (_a = state.context.user) == null ? void 0 : _a.isAnonymous;\n  }, function (a, b) {\n    return a === b;\n  });\n};\nvar useIsAnonymous = useUserIsAnonymous;\nvar useUserLocale = function useUserLocale() {\n  var service = useAuthInterpreter();\n  return useSelector(service, function (state) {\n    var _a;\n    return (_a = state.context.user) == null ? void 0 : _a.locale;\n  }, function (a, b) {\n    return a === b;\n  });\n};\nvar useUserRoles = function useUserRoles() {\n  var service = useAuthInterpreter();\n  return useSelector(service, function (state) {\n    var _a;\n    return ((_a = state.context.user) == null ? void 0 : _a.roles) || [];\n  }, function (a, b) {\n    return a.every(function (i) {\n      return b.includes(i) && b.every(function (i2) {\n        return a.includes(i2);\n      });\n    });\n  });\n};\nexport { NhostClient, NhostReactContext, NhostReactProvider, useAccessToken, useAddSecurityKey, useAuthInterpreter, useAuthLoading, useAuthenticated, useAuthenticationStatus, useAvatarUrl, useChangeEmail, useChangePassword, useConfigMfa, useDecodedAccessToken, useDefaultRole, useDisplayName, useEmail, useFileUpload, useFileUploadItem, useHasuraClaim, useHasuraClaims, useIsAnonymous, useMultipleFilesUpload, useNhostAuth, useNhostBackendUrl, useNhostClient, useProviderLink, useResetPassword, useSendVerificationEmail, useSignInAnonymous, useSignInEmailPassword, useSignInEmailPasswordless, useSignInEmailSecurityKey, useSignInSmsPasswordless, useSignOut, useSignUpEmailPassword, useSignUpEmailSecurityKeyEmail, useUserAvatarUrl, useUserData, useUserDefaultRole, useUserDisplayName, useUserEmail, useUserId, useUserIsAnonymous, useUserLocale, useUserRoles };","map":null,"metadata":{},"sourceType":"module"}