{"ast":null,"code":"var _s = $RefreshSig$();\nimport styles from '../styles/pages/Profile.module.css';\nimport { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useOutletContext } from 'react-router-dom';\nimport Input from '../components/Input';\nimport { gql, useMutation } from '@apollo/client';\nimport { toast } from 'react-hot-toast';\nconst UPDATE_USER_MUTATION = gql`\n  mutation ($id: uuid!, $displayName: String!, $metadata: jsonb) {\n    updateUser(pk_columns: { id: $id }, _set: { displayName: $displayName, metadata: $metadata }) {\n      id\n      displayName\n      metadata\n    }\n  }\n`;\nconst Profile = () => {\n  _s();\n  const [mutateUser, {\n    loading: updatingProfile\n  }] = useMutation(UPDATE_USER_MUTATION);\n  const updateUserProfile = async e => {\n    e.preventDefault();\n    try {\n      await mutateUser({\n        variables: {\n          id: user.id,\n          displayName: `${firstName} ${lastName}`.trim(),\n          metadata: {\n            firstName,\n            lastName\n          }\n        }\n      });\n      toast.success('Updated successfully', {\n        id: 'updateProfile'\n      });\n    } catch (error) {\n      toast.error('Unable to update profile', {\n        id: 'updateProfile'\n      });\n    }\n  };\n\n  //...\n};\n_s(Profile, \"dfyD6Vx8/cfOlezvlXg3DXnShAQ=\", false, function () {\n  return [useMutation];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["styles","useState","Helmet","useOutletContext","Input","gql","useMutation","toast","UPDATE_USER_MUTATION","Profile","mutateUser","loading","updatingProfile","updateUserProfile","e","preventDefault","variables","id","user","displayName","firstName","lastName","trim","metadata","success","error"],"sources":["C:/Users/Alias/weboldal/web-login/src/pages/Profile.js"],"sourcesContent":["import styles from '../styles/pages/Profile.module.css';\n\nimport { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useOutletContext } from 'react-router-dom';\nimport Input from '../components/Input';\n\n\n\n\nimport { gql, useMutation } from '@apollo/client'\nimport { toast } from 'react-hot-toast'\n\nconst UPDATE_USER_MUTATION = gql`\n  mutation ($id: uuid!, $displayName: String!, $metadata: jsonb) {\n    updateUser(pk_columns: { id: $id }, _set: { displayName: $displayName, metadata: $metadata }) {\n      id\n      displayName\n      metadata\n    }\n  }\n`\n\nconst Profile = () => {\n  const [mutateUser, { loading: updatingProfile }] = useMutation(UPDATE_USER_MUTATION)\n\n  const updateUserProfile = async (e) => {\n    e.preventDefault()\n\n    try {\n      await mutateUser({\n        variables: {\n          id: user.id,\n          displayName: `${firstName} ${lastName}`.trim(),\n          metadata: {\n            firstName,\n            lastName\n          }\n        }\n      })\n      toast.success('Updated successfully', { id: 'updateProfile' })\n    } catch (error) {\n      toast.error('Unable to update profile', { id: 'updateProfile' })\n    }\n  }\n\n  //...\n}\n\nexport default Profile;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,oCAAoC;AAEvD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,qBAAqB;AAKvC,SAASC,GAAG,EAAEC,WAAW,QAAQ,gBAAgB;AACjD,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,MAAMC,oBAAoB,GAAGH,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMI,OAAO,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,UAAU,EAAE;IAAEC,OAAO,EAAEC;EAAgB,CAAC,CAAC,GAAGN,WAAW,CAACE,oBAAoB,CAAC;EAEpF,MAAMK,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAI;MACF,MAAML,UAAU,CAAC;QACfM,SAAS,EAAE;UACTC,EAAE,EAAEC,IAAI,CAACD,EAAE;UACXE,WAAW,EAAG,GAAEC,SAAU,IAAGC,QAAS,EAAC,CAACC,IAAI,EAAE;UAC9CC,QAAQ,EAAE;YACRH,SAAS;YACTC;UACF;QACF;MACF,CAAC,CAAC;MACFd,KAAK,CAACiB,OAAO,CAAC,sBAAsB,EAAE;QAAEP,EAAE,EAAE;MAAgB,CAAC,CAAC;IAChE,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdlB,KAAK,CAACkB,KAAK,CAAC,0BAA0B,EAAE;QAAER,EAAE,EAAE;MAAgB,CAAC,CAAC;IAClE;EACF,CAAC;;EAED;AACF,CAAC;AAAA,GAxBKR,OAAO;EAAA,QACwCH,WAAW;AAAA;AAAA,KAD1DG,OAAO;AA0Bb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}