{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alias\\\\weboldal\\\\web-login\\\\src\\\\modal\\\\QuadsModal.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\n\n//\n\nimport useState from 'react';\nimport AddTaskForm from './AddTaskForm.jsx';\nimport UpdateForm from './UpdateForm.jsx';\nimport ToDo from './ToDo.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 500,\n  bgcolor: 'background.paper',\n  border: '1px solid #fff',\n  boxShadow: 50,\n  p: 4\n};\nexport default function QuadsModal() {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  // Tasks (ToDo List) State\n  //////////////////////////\n  const [toDo, setToDo] = useState([{\n    id: 1,\n    title: 'Task 1',\n    status: false\n  }, {\n    id: 2,\n    title: 'Task 2',\n    status: false\n  }, {\n    id: 3,\n    title: 'Task 2',\n    status: false\n  }, {\n    id: 4,\n    title: 'Task 2',\n    status: false\n  }]);\n\n  // Temp State\n  /////////////\n  const [newTask, setNewTask] = useState('');\n  const [updateData, setUpdateData] = useState('');\n\n  // Add task \n  ///////////\n  const addTask = () => {\n    if (newTask) {\n      let num = toDo.length + 1;\n\n      // let newEntry = { id: num, title: newTask, status: false }\n      // setToDo([...toDo, newEntry])\n\n      // refactored\n      setToDo([...toDo, {\n        id: num,\n        title: newTask,\n        status: false\n      }]);\n      setNewTask('');\n    }\n  };\n\n  // Delete task \n  //////////////\n  const deleteTask = id => {\n    // let newTasks = toDo.filter( task => task.id !== id)\n    // setToDo(newTasks)\n\n    // refactored\n    setToDo(toDo.filter(task => task.id !== id));\n  };\n\n  // Mark task as done or completed\n  /////////////////////////////////\n  const markDone = id => {\n    // let newTask = toDo.map( task => {\n    //   if( task.id === id ) {\n    //     return ({ ...task, status: !task.status })\n    //   } \n    //   return task\n    // })\n    // setToDo(newTask)\n\n    // refactored\n    setToDo(toDo.map(task => task.id === id ? {\n      ...task,\n      status: !task.status\n    } : task));\n  };\n\n  // Cancel update\n  ////////////////\n  const cancelUpdate = () => {\n    setUpdateData('');\n  };\n\n  // Change task for update\n  /////////////////////////\n  const changeHolder = e => {\n    // let newEntry = {\n    //   id: updateData.id,\n    //   title: e.target.value,\n    //   status: updateData.status ? true : false\n    // }\n    // setUpdateData(newEntry)\n\n    // refactored\n    setUpdateData({\n      ...updateData,\n      title: e.target.value\n    });\n  };\n\n  // Update task\n  //////////////\n  const updateTask = () => {\n    // let filterRecords = [...toDo].filter( task => task.id !== updateData.id )\n    // let updatedObject = [...filterRecords, updateData]\n    // setToDo(updatedObject)\n\n    // refactored\n    let removeOldRecord = [...toDo].filter(task => task.id !== updateData.id);\n    setToDo([...removeOldRecord, updateData]);\n    setUpdateData('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleOpen,\n      children: \"Quads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      herf: \"versenyek/index.htmel\",\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container App\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"To Do List App (ReactJS)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 7\n          }, this), updateData && updateData ? /*#__PURE__*/_jsxDEV(UpdateForm, {\n            updateData: updateData,\n            changeHolder: changeHolder,\n            updateTask: updateTask,\n            cancelUpdate: cancelUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 3\n          }, this) : /*#__PURE__*/_jsxDEV(AddTaskForm, {\n            newTask: newTask,\n            setNewTask: setNewTask,\n            addTask: addTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 3\n          }, this), toDo && toDo.length ? '' : 'No Tasks...', /*#__PURE__*/_jsxDEV(ToDo, {\n            toDo: toDo,\n            markDone: markDone,\n            setUpdateData: setUpdateData,\n            deleteTask: deleteTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(QuadsModal, \"rkicMpOVUgrfnk1WSUw7cP4celQ=\");\n_c = QuadsModal;\nvar _c;\n$RefreshReg$(_c, \"QuadsModal\");","map":{"version":3,"names":["React","Box","Button","Typography","Modal","useState","AddTaskForm","UpdateForm","ToDo","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","QuadsModal","open","setOpen","handleOpen","handleClose","toDo","setToDo","id","title","status","newTask","setNewTask","updateData","setUpdateData","addTask","num","length","deleteTask","filter","task","markDone","map","cancelUpdate","changeHolder","e","target","value","updateTask","removeOldRecord"],"sources":["C:/Users/Alias/weboldal/web-login/src/modal/QuadsModal.js"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\n\r\n\r\n\r\n//\r\n\r\nimport useState from 'react'\r\nimport AddTaskForm from './AddTaskForm.jsx'\r\nimport UpdateForm from './UpdateForm.jsx'\r\nimport ToDo from './ToDo.jsx'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nimport './App.css'\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 500,\r\n  bgcolor: 'background.paper',\r\n  border: '1px solid #fff',\r\n  boxShadow: 50,\r\n  p: 4,\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default function QuadsModal() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  \r\n  // Tasks (ToDo List) State\r\n  //////////////////////////\r\n  const [toDo, setToDo] = useState([\r\n    {id: 1, title: 'Task 1', status: false},\r\n    {id: 2, title: 'Task 2', status: false},\r\n    {id: 3, title: 'Task 2', status: false},\r\n    {id: 4, title: 'Task 2', status: false}\r\n    \r\n  ])\r\n\r\n  // Temp State\r\n  /////////////\r\n  const [newTask, setNewTask] = useState('')\r\n  const [updateData, setUpdateData] = useState('')\r\n\r\n  // Add task \r\n  ///////////\r\n  const addTask = () => {\r\n    if(newTask) {\r\n      let num = toDo.length + 1\r\n      \r\n      // let newEntry = { id: num, title: newTask, status: false }\r\n      // setToDo([...toDo, newEntry])\r\n\r\n      // refactored\r\n      setToDo([\r\n        ...toDo, \r\n        { id: num, title: newTask, status: false }\r\n      ])\r\n\r\n      setNewTask('')\r\n\r\n    }\r\n  }\r\n\r\n  // Delete task \r\n  //////////////\r\n  const deleteTask = (id) => {\r\n    \r\n    // let newTasks = toDo.filter( task => task.id !== id)\r\n    // setToDo(newTasks)\r\n\r\n    // refactored\r\n    setToDo(toDo.filter(task => task.id !== id))\r\n\r\n  }\r\n\r\n  // Mark task as done or completed\r\n  /////////////////////////////////\r\n  const markDone = (id) => {\r\n    \r\n    // let newTask = toDo.map( task => {\r\n    //   if( task.id === id ) {\r\n    //     return ({ ...task, status: !task.status })\r\n    //   } \r\n    //   return task\r\n    // })\r\n    // setToDo(newTask)\r\n\r\n    // refactored\r\n    setToDo(toDo.map(\r\n      task => task.id === id \r\n      ? ({ ...task, status: !task.status }) \r\n      : (task) \r\n    ))\r\n\r\n  }\r\n\r\n  // Cancel update\r\n  ////////////////\r\n  const cancelUpdate = () => {\r\n    setUpdateData('')\r\n  }\r\n\r\n  // Change task for update\r\n  /////////////////////////\r\n  const changeHolder = (e) => {\r\n\r\n    // let newEntry = {\r\n    //   id: updateData.id,\r\n    //   title: e.target.value,\r\n    //   status: updateData.status ? true : false\r\n    // }\r\n    // setUpdateData(newEntry)\r\n\r\n    // refactored\r\n    setUpdateData({...updateData, title: e.target.value})\r\n\r\n  }\r\n\r\n  // Update task\r\n  //////////////\r\n  const updateTask = () => {\r\n    \r\n    // let filterRecords = [...toDo].filter( task => task.id !== updateData.id )\r\n    // let updatedObject = [...filterRecords, updateData]\r\n    // setToDo(updatedObject)\r\n\r\n    // refactored\r\n    let removeOldRecord = [...toDo].filter(task => task.id !== updateData.id)\r\n    setToDo([\r\n      ...removeOldRecord, \r\n      updateData\r\n    ])\r\n    \r\n    setUpdateData('')\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleOpen}>Quads</Button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        herf= \"versenyek/index.htmel\"\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n            \r\n        <div className=\"container App\">\r\n\r\n<br /><br />\r\n<h2>To Do List App (ReactJS)</h2>\r\n<br /><br />\r\n\r\n{updateData && updateData ? (\r\n  <UpdateForm \r\n    updateData={updateData}\r\n    changeHolder={changeHolder}\r\n    updateTask={updateTask}\r\n    cancelUpdate={cancelUpdate}\r\n  />\r\n) : (\r\n  <AddTaskForm \r\n    newTask={newTask}\r\n    setNewTask={setNewTask}\r\n    addTask={addTask}\r\n  />\r\n)}\r\n\r\n{toDo && toDo.length ? '' : 'No Tasks...'}\r\n\r\n<ToDo\r\n  toDo={toDo}\r\n  markDone={markDone}\r\n  setUpdateData={setUpdateData}\r\n  deleteTask={deleteTask}\r\n/>  \r\n\r\n</div>\r\n        \r\n         \r\n      \r\n       \r\n        \r\n\r\n\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}