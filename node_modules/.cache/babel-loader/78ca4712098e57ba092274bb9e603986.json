{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Alias\\\\weboldal\\\\web-login\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Alias\\\\weboldal\\\\web-login\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Alias\\\\weboldal\\\\web-login\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\nvar __objRest = function __objRest(source, exclude) {\n  var target = {};\n  for (var prop in source) {\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  }\n  if (source != null && __getOwnPropSymbols) {\n    var _iterator2 = _createForOfIteratorHelper(__getOwnPropSymbols(source)),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var prop = _step2.value;\n        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return target;\n};\nimport { HasuraAuthClient } from \"@nhost/hasura-auth-js\";\nimport { HasuraStorageClient } from \"@nhost/hasura-storage-js\";\nimport axios from \"axios\";\nimport { print } from \"graphql\";\nvar NhostFunctionsClient = /*#__PURE__*/function () {\n  function NhostFunctionsClient(params) {\n    _classCallCheck(this, NhostFunctionsClient);\n    var url = params.url,\n      adminSecret = params.adminSecret;\n    this.accessToken = null;\n    this.adminSecret = adminSecret;\n    this.instance = axios.create({\n      baseURL: url\n    });\n  }\n  _createClass(NhostFunctionsClient, [{\n    key: \"call\",\n    value: function () {\n      var _call = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(url, data, config) {\n        var headers, res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                headers = __spreadValues(__spreadValues({}, this.generateAccessTokenHeaders()), config == null ? void 0 : config.headers);\n                _context.prev = 1;\n                _context.next = 4;\n                return this.instance.post(url, data, __spreadProps(__spreadValues({}, config), {\n                  headers: headers\n                }));\n              case 4:\n                res = _context.sent;\n                _context.next = 11;\n                break;\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                if (!(_context.t0 instanceof Error)) {\n                  _context.next = 11;\n                  break;\n                }\n                return _context.abrupt(\"return\", {\n                  res: null,\n                  error: _context.t0\n                });\n              case 11:\n                if (res) {\n                  _context.next = 13;\n                  break;\n                }\n                return _context.abrupt(\"return\", {\n                  res: null,\n                  error: new Error(\"Unable to make post request to funtion\")\n                });\n              case 13:\n                return _context.abrupt(\"return\", {\n                  res: res,\n                  error: null\n                });\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n      function call(_x, _x2, _x3) {\n        return _call.apply(this, arguments);\n      }\n      return call;\n    }()\n  }, {\n    key: \"setAccessToken\",\n    value: function setAccessToken(accessToken) {\n      if (!accessToken) {\n        this.accessToken = null;\n        return;\n      }\n      this.accessToken = accessToken;\n    }\n  }, {\n    key: \"generateAccessTokenHeaders\",\n    value: function generateAccessTokenHeaders() {\n      if (this.adminSecret) {\n        return {\n          \"x-hasura-admin-secret\": this.adminSecret\n        };\n      }\n      if (this.accessToken) {\n        return {\n          Authorization: \"Bearer \".concat(this.accessToken)\n        };\n      }\n      return {};\n    }\n  }]);\n  return NhostFunctionsClient;\n}();\nvar NhostGraphqlClient = /*#__PURE__*/function () {\n  function NhostGraphqlClient(params) {\n    _classCallCheck(this, NhostGraphqlClient);\n    var url = params.url,\n      adminSecret = params.adminSecret;\n    this.url = url;\n    this.accessToken = null;\n    this.adminSecret = adminSecret;\n    this.instance = axios.create({\n      baseURL: url\n    });\n  }\n  _createClass(NhostGraphqlClient, [{\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(document, variables, config) {\n        var headers, operationName, res, responseData, data;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                headers = __spreadValues(__spreadValues({}, this.generateAccessTokenHeaders()), config == null ? void 0 : config.headers);\n                _context2.prev = 1;\n                operationName = \"\";\n                _context2.next = 5;\n                return this.instance.post(\"\", {\n                  operationName: operationName || void 0,\n                  query: typeof document === \"string\" ? document : print(document),\n                  variables: variables\n                }, __spreadProps(__spreadValues({}, config), {\n                  headers: headers\n                }));\n              case 5:\n                res = _context2.sent;\n                responseData = res.data;\n                data = responseData.data;\n                if (!responseData.errors) {\n                  _context2.next = 10;\n                  break;\n                }\n                return _context2.abrupt(\"return\", {\n                  data: null,\n                  error: responseData.errors\n                });\n              case 10:\n                if (!(typeof data !== \"object\" || Array.isArray(data) || data === null)) {\n                  _context2.next = 12;\n                  break;\n                }\n                return _context2.abrupt(\"return\", {\n                  data: null,\n                  error: new Error(\"incorrect response data from GraphQL server\")\n                });\n              case 12:\n                return _context2.abrupt(\"return\", {\n                  data: data,\n                  error: null\n                });\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](1);\n                if (!(_context2.t0 instanceof Error)) {\n                  _context2.next = 19;\n                  break;\n                }\n                return _context2.abrupt(\"return\", {\n                  data: null,\n                  error: _context2.t0\n                });\n              case 19:\n                console.error(_context2.t0);\n                return _context2.abrupt(\"return\", {\n                  data: null,\n                  error: new Error(\"Unable to get do GraphQL request\")\n                });\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 15]]);\n      }));\n      function request(_x4, _x5, _x6) {\n        return _request.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"getUrl\",\n    value: function getUrl() {\n      return this.url;\n    }\n  }, {\n    key: \"setAccessToken\",\n    value: function setAccessToken(accessToken) {\n      if (!accessToken) {\n        this.accessToken = null;\n        return;\n      }\n      this.accessToken = accessToken;\n    }\n  }, {\n    key: \"generateAccessTokenHeaders\",\n    value: function generateAccessTokenHeaders() {\n      if (this.adminSecret) {\n        return {\n          \"x-hasura-admin-secret\": this.adminSecret\n        };\n      }\n      if (this.accessToken) {\n        return {\n          Authorization: \"Bearer \".concat(this.accessToken)\n        };\n      }\n      return {};\n    }\n  }]);\n  return NhostGraphqlClient;\n}();\nvar LOCALHOST_REGEX = /^localhost(:\\d+)*$/g;\nfunction urlFromParams(backendOrSubdomain, service) {\n  var backendUrl = backendOrSubdomain.backendUrl,\n    subdomain = backendOrSubdomain.subdomain,\n    region = backendOrSubdomain.region;\n  if (!backendUrl && !subdomain) {\n    throw new Error(\"Either `backendUrl` or `subdomain` must be set.\");\n  }\n  if (backendUrl) {\n    return \"\".concat(backendUrl, \"/v1/\").concat(service);\n  }\n  if (!subdomain) {\n    throw new Error(\"`subdomain` must be set if `backendUrl` is not set.\");\n  }\n  var subdomainLocalhostFound = subdomain.match(LOCALHOST_REGEX);\n  if (subdomainLocalhostFound && subdomainLocalhostFound.length > 0) {\n    var localhostFound = subdomainLocalhostFound[0];\n    if (localhostFound === \"localhost\") {\n      return \"http://localhost:1337/v1/\".concat(service);\n    }\n    return \"http://\".concat(localhostFound, \"/v1/\").concat(service);\n  }\n  if (!region) {\n    throw new Error('`region` must be set when using a `subdomain` other than \"localhost\".');\n  }\n  return \"https://\".concat(subdomain, \".\").concat(service, \".\").concat(region, \".nhost.run/v1\");\n}\nvar NhostClient = /*#__PURE__*/function () {\n  function NhostClient(_a) {\n    var _this = this;\n    _classCallCheck(this, NhostClient);\n    var _b = _a,\n      refreshIntervalTime = _b.refreshIntervalTime,\n      clientStorageGetter = _b.clientStorageGetter,\n      clientStorageSetter = _b.clientStorageSetter,\n      clientStorage = _b.clientStorage,\n      clientStorageType = _b.clientStorageType,\n      autoRefreshToken = _b.autoRefreshToken,\n      autoSignIn = _b.autoSignIn,\n      adminSecret = _b.adminSecret,\n      devTools = _b.devTools,\n      _b$start = _b.start,\n      start = _b$start === void 0 ? true : _b$start,\n      urlParams = __objRest(_b, [\"refreshIntervalTime\", \"clientStorageGetter\", \"clientStorageSetter\", \"clientStorage\", \"clientStorageType\", \"autoRefreshToken\", \"autoSignIn\", \"adminSecret\", \"devTools\", \"start\"]);\n    var _a2;\n    this.auth = new HasuraAuthClient({\n      url: urlFromParams(urlParams, \"auth\"),\n      refreshIntervalTime: refreshIntervalTime,\n      clientStorageGetter: clientStorageGetter,\n      clientStorageSetter: clientStorageSetter,\n      clientStorage: clientStorage,\n      clientStorageType: clientStorageType,\n      autoRefreshToken: autoRefreshToken,\n      autoSignIn: autoSignIn,\n      start: start\n    });\n    this.storage = new HasuraStorageClient({\n      url: urlFromParams(urlParams, \"storage\"),\n      adminSecret: adminSecret\n    });\n    this.functions = new NhostFunctionsClient({\n      url: urlFromParams(urlParams, \"functions\"),\n      adminSecret: adminSecret\n    });\n    this.graphql = new NhostGraphqlClient({\n      url: urlFromParams(urlParams, \"graphql\"),\n      adminSecret: adminSecret\n    });\n    this.storage.setAccessToken(this.auth.getAccessToken());\n    this.functions.setAccessToken(this.auth.getAccessToken());\n    this.graphql.setAccessToken(this.auth.getAccessToken());\n    (_a2 = this.auth.client) == null ? void 0 : _a2.onStart(function () {\n      _this.auth.onAuthStateChanged(function (_event, session) {\n        if (_event === \"SIGNED_OUT\") {\n          _this.storage.setAccessToken(void 0);\n          _this.functions.setAccessToken(void 0);\n          _this.graphql.setAccessToken(void 0);\n        }\n      });\n      _this.auth.onTokenChanged(function (session) {\n        _this.storage.setAccessToken(session == null ? void 0 : session.accessToken);\n        _this.functions.setAccessToken(session == null ? void 0 : session.accessToken);\n        _this.graphql.setAccessToken(session == null ? void 0 : session.accessToken);\n      });\n    });\n    this._adminSecret = adminSecret;\n    this.devTools = devTools;\n  }\n  _createClass(NhostClient, [{\n    key: \"adminSecret\",\n    get: function get() {\n      return this._adminSecret;\n    },\n    set: function set(newValue) {\n      this._adminSecret = newValue;\n      this.storage.setAdminSecret(newValue);\n    }\n  }]);\n  return NhostClient;\n}();\nvar createClient = function createClient(config) {\n  return new NhostClient(config);\n};\nexport { NhostClient, NhostFunctionsClient, NhostGraphqlClient, createClient };","map":null,"metadata":{},"sourceType":"module"}